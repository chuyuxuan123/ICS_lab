#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
# Chuyuxuan 517030910079
# Describe how and why you modified the baseline code.
# 1.use iaddq to replace irmovq, addq
# 2.loop unrolling 8*1loop then 4*1 then 2*1
# 3.reduce times of jXX
# Average CPE	7.70
# Score	55.9/60.0
# bytes 962
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
judge1:
	iaddq $-8, %rdx
	jge Loop1
	iaddq $4, %rdx
judge2:
	
	jge Loop2
	iaddq $2, %rdx
judge3:
	
	jge Loop3
	iaddq $2, %rdx
judge4:
	jg Loop4
	ret

Loop1:
	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	mrmovq 32(%rdi), %r12
	mrmovq 40(%rdi), %r13
	mrmovq 48(%rdi), %r14
	mrmovq 56(%rdi), %rcx

	rmmovq %r8, (%rsi)
	rmmovq %r9, 8(%rsi)
	rmmovq %r10, 16(%rsi)
	rmmovq %r11, 24(%rsi)
	rmmovq %r12, 32(%rsi)
	rmmovq %r13, 40(%rsi)
	rmmovq %r14, 48(%rsi)
	rmmovq %rcx, 56(%rsi)
	andq %r8, %r8
	jle Npos1
	iaddq $1, %rax
Npos1:
	andq %r9, %r9
	jle Npos2
	iaddq $1, %rax
Npos2:
	andq %r10, %r10
	jle Npos3
	iaddq $1, %rax
Npos3:
	andq %r11, %r11
	jle Npos4
	iaddq $1, %rax
Npos4:
	andq %r12, %r12
	jle Npos5
	iaddq $1, %rax
Npos5:
	andq %r13, %r13
	jle Npos6
	iaddq $1, %rax
Npos6:
	andq %r14, %r14
	jle Npos7
	iaddq $1, %rax
Npos7:
	andq %rcx, %rcx
	jle Npos10
	iaddq $1, %rax
Npos10:
	iaddq $64, %rdi
	iaddq $64, %rsi
#	jmp judge1
	iaddq $-8, %rdx
	jge Loop1
	iaddq $4, %rdx

	
	jge Loop2
	iaddq $2, %rdx

	
	jge Loop3
	iaddq $2, %rdx

	je Done
	mrmovq (%rdi), %r8
	rmmovq %r8, (%rsi)
	andq %r8, %r8
	jle Done
	iaddq $1, %rax
	ret

Loop2:
	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11

	rmmovq %r8, (%rsi)
	rmmovq %r9, 8(%rsi)
	rmmovq %r10, 16(%rsi)
	rmmovq %r11, 24(%rsi)
	andq %r8, %r8
	jle Npos11
	iaddq $1, %rax
Npos11:
	andq %r9, %r9
	jle Npos12
	iaddq $1, %rax
Npos12:
	andq %r10, %r10
	jle Npos13
	iaddq $1, %rax
Npos13:
	andq %r11, %r11
	jle Npos16
	iaddq $1, %rax
Npos16:
	iaddq $32, %rdi
	iaddq $32, %rsi
	iaddq $-2, %rdx
	jge Loop3
	iaddq $2, %rdx

	je Done
	mrmovq (%rdi), %r8
	rmmovq %r8, (%rsi)
	andq %r8, %r8
	jle Done
	iaddq $1, %rax
	ret

Loop3:
	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	rmmovq %r8, (%rsi)
	rmmovq %r9, 8(%rsi)
	andq %r8, %r8
	jle Npos17
	iaddq $1, %rax
Npos17:
	andq %r9, %r9
	jle Npos19
	iaddq $1, %rax
Npos19:
	iaddq $16, %rdi
	iaddq $16, %rsi
	andq %rdx, %rdx
	je Done
	

Loop4:
	mrmovq (%rdi), %r8
	rmmovq %r8, (%rsi)
	andq %r8, %r8
	jle Done
	iaddq $1, %rax

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
