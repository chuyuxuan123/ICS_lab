                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f40005000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f65804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f72004000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Chuyuxuan 517030910079
                            | # Describe how and why you modified the baseline code.
                            | # 1.use iaddq to replace irmovq, addq
                            | # 2.loop unrolling 8*1loop then 4*1 then 2*1
                            | # Average CPE	7.93
                            | # Score	51.4/60.0
                            | # bytes 800
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
0x032:                      | judge1:
0x032: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx
0x03c: 75a800000000000000   | 	jge Loop1
0x045: c0f20400000000000000 | 	iaddq $4, %rdx
0x04f:                      | judge2:
                            | 	
0x04f: 757a02000000000000   | 	jge Loop2
0x058: c0f20200000000000000 | 	iaddq $2, %rdx
0x062:                      | judge3:
                            | 	
0x062: 758203000000000000   | 	jge Loop3
0x06b: c0f20200000000000000 | 	iaddq $2, %rdx
0x075:                      | judge4:
0x075: 731c04000000000000   | 	je Done
0x07e: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x088: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x092: 6288                 | 	andq %r8, %r8
0x094: 711c04000000000000   | 	jle Done
0x09d: c0f00100000000000000 | 	iaddq $1, %rax
0x0a7: 90                   | 	ret
                            | 
0x0a8:                      | Loop1:
0x0a8: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x0b2: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x0bc: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x0c6: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x0d0: 50c72000000000000000 | 	mrmovq 32(%rdi), %r12
0x0da: 50d72800000000000000 | 	mrmovq 40(%rdi), %r13
0x0e4: 50e73000000000000000 | 	mrmovq 48(%rdi), %r14
0x0ee: 50173800000000000000 | 	mrmovq 56(%rdi), %rcx
                            | 
0x0f8: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x102: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x10c: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x116: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x120: 40c62000000000000000 | 	rmmovq %r12, 32(%rsi)
0x12a: 40d62800000000000000 | 	rmmovq %r13, 40(%rsi)
0x134: 40e63000000000000000 | 	rmmovq %r14, 48(%rsi)
0x13e: 40163800000000000000 | 	rmmovq %rcx, 56(%rsi)
0x148: 6288                 | 	andq %r8, %r8
0x14a: 715d01000000000000   | 	jle Npos1
0x153: c0f00100000000000000 | 	iaddq $1, %rax
0x15d:                      | Npos1:
0x15d: 6299                 | 	andq %r9, %r9
0x15f: 717201000000000000   | 	jle Npos2
0x168: c0f00100000000000000 | 	iaddq $1, %rax
0x172:                      | Npos2:
0x172: 62aa                 | 	andq %r10, %r10
0x174: 718701000000000000   | 	jle Npos3
0x17d: c0f00100000000000000 | 	iaddq $1, %rax
0x187:                      | Npos3:
0x187: 62bb                 | 	andq %r11, %r11
0x189: 719c01000000000000   | 	jle Npos4
0x192: c0f00100000000000000 | 	iaddq $1, %rax
0x19c:                      | Npos4:
0x19c: 62cc                 | 	andq %r12, %r12
0x19e: 71b101000000000000   | 	jle Npos5
0x1a7: c0f00100000000000000 | 	iaddq $1, %rax
0x1b1:                      | Npos5:
0x1b1: 62dd                 | 	andq %r13, %r13
0x1b3: 71c601000000000000   | 	jle Npos6
0x1bc: c0f00100000000000000 | 	iaddq $1, %rax
0x1c6:                      | Npos6:
0x1c6: 62ee                 | 	andq %r14, %r14
0x1c8: 71db01000000000000   | 	jle Npos7
0x1d1: c0f00100000000000000 | 	iaddq $1, %rax
0x1db:                      | Npos7:
0x1db: 6211                 | 	andq %rcx, %rcx
0x1dd: 71f001000000000000   | 	jle Npos10
0x1e6: c0f00100000000000000 | 	iaddq $1, %rax
0x1f0:                      | Npos10:
0x1f0: c0f74000000000000000 | 	iaddq $64, %rdi
0x1fa: c0f64000000000000000 | 	iaddq $64, %rsi
                            | #	jmp judge1
0x204: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx
0x20e: 75a800000000000000   | 	jge Loop1
0x217: c0f20400000000000000 | 	iaddq $4, %rdx
                            | 
                            | 	
0x221: 757a02000000000000   | 	jge Loop2
0x22a: c0f20200000000000000 | 	iaddq $2, %rdx
                            | 
                            | 	
0x234: 758203000000000000   | 	jge Loop3
0x23d: c0f20200000000000000 | 	iaddq $2, %rdx
                            | 
0x247: 731c04000000000000   | 	je Done
0x250: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x25a: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x264: 6288                 | 	andq %r8, %r8
0x266: 711c04000000000000   | 	jle Done
0x26f: c0f00100000000000000 | 	iaddq $1, %rax
0x279: 90                   | 	ret
                            | 
0x27a:                      | Loop2:
0x27a: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x284: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x28e: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x298: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
                            | 
0x2a2: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x2ac: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x2b6: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x2c0: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x2ca: 6288                 | 	andq %r8, %r8
0x2cc: 71df02000000000000   | 	jle Npos11
0x2d5: c0f00100000000000000 | 	iaddq $1, %rax
0x2df:                      | Npos11:
0x2df: 6299                 | 	andq %r9, %r9
0x2e1: 71f402000000000000   | 	jle Npos12
0x2ea: c0f00100000000000000 | 	iaddq $1, %rax
0x2f4:                      | Npos12:
0x2f4: 62aa                 | 	andq %r10, %r10
0x2f6: 710903000000000000   | 	jle Npos13
0x2ff: c0f00100000000000000 | 	iaddq $1, %rax
0x309:                      | Npos13:
0x309: 62bb                 | 	andq %r11, %r11
0x30b: 711e03000000000000   | 	jle Npos16
0x314: c0f00100000000000000 | 	iaddq $1, %rax
0x31e:                      | Npos16:
0x31e: c0f72000000000000000 | 	iaddq $32, %rdi
0x328: c0f62000000000000000 | 	iaddq $32, %rsi
0x332: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x33c: 758203000000000000   | 	jge Loop3
0x345: c0f20200000000000000 | 	iaddq $2, %rdx
                            | 
0x34f: 731c04000000000000   | 	je Done
0x358: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x362: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x36c: 6288                 | 	andq %r8, %r8
0x36e: 711c04000000000000   | 	jle Done
0x377: c0f00100000000000000 | 	iaddq $1, %rax
0x381: 90                   | 	ret
                            | 
0x382:                      | Loop3:
0x382: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x38c: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x396: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x3a0: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x3aa: 6288                 | 	andq %r8, %r8
0x3ac: 71bf03000000000000   | 	jle Npos17
0x3b5: c0f00100000000000000 | 	iaddq $1, %rax
0x3bf:                      | Npos17:
0x3bf: 6299                 | 	andq %r9, %r9
0x3c1: 71d403000000000000   | 	jle Npos19
0x3ca: c0f00100000000000000 | 	iaddq $1, %rax
0x3d4:                      | Npos19:
0x3d4: c0f71000000000000000 | 	iaddq $16, %rdi
0x3de: c0f61000000000000000 | 	iaddq $16, %rsi
0x3e8: 6222                 | 	andq %rdx, %rdx
0x3ea: 731c04000000000000   | 	je Done
                            | 	
                            | 
0x3f3:                      | Loop4:
0x3f3: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x3fd: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x407: 6288                 | 	andq %r8, %r8
0x409: 711c04000000000000   | 	jle Done
0x412: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x41c:                      | Done:
0x41c: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x41d:                      | End:
                            | #/* $end ncopy-ys */
0x41d:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x420:                      | 	.align 8
0x420:                      | src:
0x420: 0100000000000000     | 	.quad 1
0x428: feffffffffffffff     | 	.quad -2
0x430: 0300000000000000     | 	.quad 3
0x438: fcffffffffffffff     | 	.quad -4
0x440: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x450:                      | 	.align 16
0x450:                      | Predest:
0x450: fadebc0000000000     | 	.quad 0xbcdefa
0x458:                      | dest:
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478:                      | Postdest:
0x478: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x480:                      | .align 8
                            | # Run time stack
0x480: 0000000000000000     | 	.quad 0
0x488: 0000000000000000     | 	.quad 0
0x490: 0000000000000000     | 	.quad 0
0x498: 0000000000000000     | 	.quad 0
0x4a0: 0000000000000000     | 	.quad 0
0x4a8: 0000000000000000     | 	.quad 0
0x4b0: 0000000000000000     | 	.quad 0
0x4b8: 0000000000000000     | 	.quad 0
0x4c0: 0000000000000000     | 	.quad 0
0x4c8: 0000000000000000     | 	.quad 0
0x4d0: 0000000000000000     | 	.quad 0
0x4d8: 0000000000000000     | 	.quad 0
0x4e0: 0000000000000000     | 	.quad 0
0x4e8: 0000000000000000     | 	.quad 0
0x4f0: 0000000000000000     | 	.quad 0
0x4f8: 0000000000000000     | 	.quad 0
                            | 
0x500:                      | Stack:
